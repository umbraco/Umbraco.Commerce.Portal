@using Umbraco.Commerce.Portal.Extensions
@inherits UmbracoViewPage
@{
    var store = Model.GetStore();

    var portalContainerPage = Model.GetPortalContainerPage();
    var homePage = Model.GetPortalContainerSettingByAlias(UmbracoCommercePortalConstants.ContentTypes.Properties.HomePageAlias);
    var myAccountPage = Model.GetPortalContainerPage(UmbracoCommercePortalConstants.ContentTypes.Aliases.PortalMyAccountPage, null);
    var orderHistoryPage = Model.GetPortalContainerPage(UmbracoCommercePortalConstants.ContentTypes.Aliases.PortalOrderHistoryPage, null);

    var logo = Html.Raw(Model.GetStoreLogo(100, 100));
}

<aside id="sidebar" class="sidebar">
    <div class="sidebar__header">
		<a href="@(homePage != null ? homePage.Url() : "/")" class="sidebar__logo ucp-text-color">
            <div class="sidebar__logo-icon">
                @if (!string.IsNullOrEmpty(logo.ToString()))
                {
                    <img src="@logo" alt="@store.Name" />
                }
                else
                {
                    <text>@store.Name</text>
                }
            </div>
        </a>
    </div>

    <nav class="sidebar__nav">
        <ul class="sidebar__nav-list">
            <li class="sidebar__nav-item">
                <a href="@(myAccountPage != null ? myAccountPage.Url() : "#")"
				   class="sidebar__nav-link @(myAccountPage != null && myAccountPage.Id == Model.Id ? "sidebar__nav-link--active" : "") ucp-text-color">
                    <svg class="sidebar__nav-icon" viewBox="0 0 24 24">
                        <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z" />
                    </svg>
                    @Umbraco.GetDictionaryValueOrDefault(UmbracoCommercePortalConstants.Localization.ManagementEntries.MyAccount.Key, UmbracoCommercePortalConstants.Localization.ManagementEntries.MyAccount.DefaultValue)
                </a>
            </li>
            <li class="sidebar__nav-item">
                <a href="@(orderHistoryPage != null ? orderHistoryPage.Url() : "#")"
				   class="sidebar__nav-link @(orderHistoryPage != null && orderHistoryPage.Id == Model.Id ? "sidebar__nav-link--active" : "") ucp-text-color">
                    <svg class="sidebar__nav-icon" viewBox="0 0 24 24">
                        <path d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-1 16H6V7h12v12zm-7-9h5v2h-5v-2zm0 3h5v2h-5v-2zm0 3h3v2h-3v-2zM7 10h2v2H7v-2zm0 3h2v2H7v-2zm0 3h2v2H7v-2z" />
                    </svg>
                    @Umbraco.GetDictionaryValueOrDefault(UmbracoCommercePortalConstants.Localization.ManagementEntries.OrderHistory.Key, UmbracoCommercePortalConstants.Localization.ManagementEntries.OrderHistory.DefaultValue)
                </a>
            </li>
        </ul>
    </nav>

    <div class="sidebar__footer">
        @await Html.PartialAsync($"{UmbracoCommercePortalConstants.UmbracoCommercePortalViewPath}/Partials/UmbracoCommercePortalSignOut.cshtml")
    </div>
</aside>

<!-- Mobile Header -->
<header class="mobile-header">
	<a href="@(homePage != null ? homePage.Url() : "/")" class="mobile-header__logo ucp-text-color">
		<div class="mobile-header__logo-icon">
			@if (!string.IsNullOrEmpty(logo.ToString()))
			{
				<img src="@logo" alt="@store.Name" />
			}
			else
			{
				<text>@store.Name</text>
			}
		</div>
	</a>
	<button class="mobile-header__menu-button" id="mobileMenuButton" onclick="toggleSidebar()">
		<svg class="mobile-header__menu-icon" viewBox="0 0 24 24">
			<path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z" />
		</svg>
	</button>
</header>

<!-- Mobile Overlay -->
<div class="mobile-overlay" id="mobileOverlay"></div>

<script>
	function toggleSidebar() {
		const sidebar = document.getElementById("sidebar");
		const mobileOverlay = document.getElementById("mobileOverlay");
		sidebar.classList.toggle("sidebar--open");
		mobileOverlay.classList.toggle("mobile-overlay--visible");
	}
</script>
