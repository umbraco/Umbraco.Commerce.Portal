name: $(TeamProject)_$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include: 
      - dev
      - release/*
      - hotfix/*
      - support/*
      - feature/*
  tags:
    include:
      - release-*

parameters:
  - name: cache_npm
    displayName: Cache NPM packages
    type: boolean
    default: true
  - name: cache_nuget
    displayName: Cache NuGet packages
    type: boolean
    default: false

variables:
  nodeVersion: 20.x
  solution: Umbraco.Commerce.Portal.sln
  buildConfiguration: Release
  DOTNET_NOLOGO: true
  DOTNET_GENERATE_ASPNET_CERTIFICATE: false
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

stages: 
  - stage: Build
    variables:
      NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages
      npm_config_cache: $(Pipeline.Workspace)/.npm_client
    jobs:
      - job: Build
        pool: 
          vmImage: ubuntu-latest
        steps:
          # Checkout source (avoid shallow clone to calculate version height)
          - checkout: self
            fetchDepth: 0

          # Setup build environment
          - task: NuGetAuthenticate@1
            displayName: Authenticate NuGet

          - task: NodeTool@0
            displayName: Use Node.js $(nodeVersion)
            inputs:
              versionSpec: $(nodeVersion)

          - task: UseDotNet@2
            displayName: Use .NET SDK from global.json
            inputs:
              useGlobalJson: true

          # Cache and restore NPM packages
          - task: Cache@2
            condition: ${{ parameters.cache_npm }}
            displayName: Cache NPM packages
            inputs:
              key: 'npm | "$(Agent.OS)" | **/package-lock.json, !**/node_modules/**'
              restoreKeys: |
                npm | "$(Agent.OS)"
                npm
              path: $(npm_config_cache)
          
          - task: CmdLine@2
            displayName: 'Install NPM packages'
            inputs:
              script: 'npm ci --no-fund --no-audit --prefer-offline'
              workingDirectory: '$(Build.SourcesDirectory)/src/Umbraco.Commerce.Portal/Client'
  
          - task: CmdLine@2
            displayName: 'Build frontend'
            inputs:
              workingDirectory: $(Build.SourcesDirectory)/src/Umbraco.Commerce.Portal/Client
              script: 'npm run build'

          # Cache and restore NuGet packages
          - task: Cache@2
            condition: ${{ parameters.cache_nuget }}
            displayName: Cache NuGet packages
            inputs:
              key: 'nuget | "$(Agent.OS)" | **/packages.lock.json, !**/bin/**, !**/obj/**'
              restoreKeys: |
                nuget | "$(Agent.OS)"
                nuget
              path: $(NUGET_PACKAGES)

          - script: dotnet restore $(solution) --locked-mode
            displayName: Restore NuGet packages

          # Build
          - script: dotnet build $(solution) --configuration $(buildConfiguration) --no-restore -p:ContinuousIntegrationBuild=true
            displayName: Run dotnet build

          # Pack
          - script: dotnet pack $(solution) --configuration $(buildConfiguration) --no-build --output $(Build.ArtifactStagingDirectory)/nupkg
            displayName: Run dotnet pack

          # Publish
          - task: PublishPipelineArtifact@1
            displayName: Publish NuGet packages
            inputs:
              targetPath: $(Build.ArtifactStagingDirectory)/nupkg
              artifactName: nupkg

          - task: PublishPipelineArtifact@1
            displayName: Publish build output
            inputs:
              targetPath: $(Build.SourcesDirectory)
              artifactName: build_output
